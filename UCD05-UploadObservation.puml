@startuml UCD05-UploadObservation
title Use Case Diagram UCD05: Upload Observation

' Primary actor (left)
actor "User" as User

' Secondary actors (right)
actor "Image Recognition\nAPI" as ImgAPI <<secondary>>
actor "Database" as DB <<secondary>>
actor "GPS System" as GPS <<secondary>>
actor "Calendar System" as Calendar <<secondary>>
actor "Web Server" as WebServer <<secondary>>

' System boundary
rectangle "ChrysaLink - Upload Observation Subsystem" {
  
  ' Main use case: Add Observation
  usecase "Add Observation\n(UC03)" as AddObs
  
  ' Specialized photo upload use cases
  usecase "Upload Lepidoptera\nImage\n(UC01)" as UploadLep
  usecase "Upload Host Plant\nImage\n(UC02)" as UploadPlant
  
  ' Species identification use cases
  usecase "Suggest Species ID\n(UC09)" as SuggestID
  usecase "Automated Species\nSuggestion\n(UC10)" as AutoID
  
  ' Supporting use cases
  usecase "Add Observation\nMetadata" as AddMetadata
  usecase "Validate & Save\nObservation" as ValidateSave
}

' Primary actor associations
User --> AddObs : initiates add observation

' Generalization: photo uploads are part of adding observation
UploadLep -|> AddObs
UploadPlant -|> AddObs

' Include relationships: AddObs includes photo uploads and metadata
AddObs ..> UploadLep : <<include>>
AddObs ..> UploadPlant : <<include>>
AddObs ..> AddMetadata : <<include>>
AddObs ..> ValidateSave : <<include>>

' Identification flows: can suggest or auto-identify
User --> SuggestID : searches for species
User --> AutoID : gets AI suggestions

' SuggestID and AutoID are alternative flows for identification
SuggestID ..> ValidateSave : <<include>>
AutoID ..> ValidateSave : <<include>>

' Secondary actor associations
UploadLep --> ImgAPI : process image for features
UploadPlant --> ImgAPI : process image for features

AutoID --> ImgAPI : send images to AI service
AutoID --> DB : query species database

SuggestID --> DB : search species

AddMetadata --> GPS : capture GPS location (optional)
AddMetadata --> Calendar : capture date (optional)

ValidateSave --> DB : save observation record
ValidateSave --> WebServer : submit observation

' Web server integration
AddObs --> WebServer : sent through
AutoID --> WebServer : API calls through

' Notes
note right of UploadLep
  Implementation: `UploadObservationModal.tsx`
  - File input for Lepidoptera image
  - Validates format and size
end note

note right of AutoID
  - Endpoint: `/functions/v1/make-server-b55216b3/species/search`
  - iNaturalist API integration for suggestions
end note

note right of AddMetadata
  - GPS: optional geo-location
  - Date: optional date picker
  - Notes: observation notes
end note

@enduml
