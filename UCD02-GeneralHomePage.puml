@startuml UCD02-GeneralHomePage
title Use Case Diagram UCD02: General Home Page

' Primary actors (left) with generalization
actor "User" as User
actor "New User" as NewUser
actor "Returning User" as ReturningUser

' Secondary actors (right)
actor "Database" as DB <<secondary>>
actor "Web Server" as WebServer <<secondary>>

' Actor generalizations
NewUser -up-|> User
ReturningUser -up-|> User

' System boundary
rectangle "ChrysaLink - Home Page Subsystem" {
  
  ' Generalized use case
  usecase "Access Home Page" as AccessHome
  
  ' Specialized use cases
  usecase "See Relationship\n(UC11)" as SeeRelationship
  usecase "View User Profile\n(UC13)" as ViewProfile
  usecase "View Notifications\n(UC15)" as ViewNotifications
  
  ' Supporting use cases for notifications
  usecase "Receive Notification" as ReceiveNotif
  usecase "Mark as Read" as MarkRead
  usecase "View Activity" as ViewActivity
}

' Primary actor associations
User --> AccessHome : accesses home

' Generalization: specialized use cases extend AccessHome
SeeRelationship -|> AccessHome
ViewProfile -|> AccessHome
ViewNotifications -|> AccessHome

' Include relationships
AccessHome ..> SeeRelationship : <<include>>
AccessHome ..> ViewProfile : <<include>>
AccessHome ..> ViewNotifications : <<include>>

' Notifications sub-flow
ViewNotifications ..> ReceiveNotif : <<include>>
ViewNotifications ..> MarkRead : <<include>>
ViewNotifications ..> ViewActivity : <<extend>>\n[if user clicks notification]

' Secondary actor associations
SeeRelationship --> DB : query relationships data
SeeRelationship --> WebServer : fetch visualizations

ViewProfile --> DB : fetch profile data
ViewProfile --> WebServer : retrieve user stats

ViewNotifications --> DB : query notifications
ReceiveNotif --> DB : fetch activity data
MarkRead --> DB : update notification status
ViewActivity --> DB : fetch observation details

' Web server integration
AccessHome --> WebServer : served by

' Notes with code mappings
note right of ViewProfile
  Implementation: `ProfilePage.tsx`
  - Displays user rating and contributions
  - Shows profile card with user stats
end note

note right of SeeRelationship
  Implementation: `RelationshipPage.tsx`
  - Displays relationship visualization
  - Shows filters by region/taxonomy
end note

note right of ViewNotifications
  Implementation: `NotificationsPage.tsx`
  - Fetches from `/functions/v1/make-server-b55216b3/notifications`
  - Marks notifications as read via POST endpoint
end note

note bottom of AccessHome
  Extension Point:
  - If user is New User: show onboarding
  - If Returning User: show personalized feed
end note

@enduml
