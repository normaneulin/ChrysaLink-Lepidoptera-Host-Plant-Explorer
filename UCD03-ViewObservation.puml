@startuml UCD03-ViewObservation
title Use Case Diagram UCD03: View an Observation

' Primary actors (left) with generalization
actor "User" as User
actor "New User" as NewUser
actor "Returning User" as ReturningUser

' Secondary actors (right)
actor "Database" as DB <<secondary>>
actor "Web Server" as WebServer <<secondary>>

' Actor generalizations
NewUser -up-|> User
ReturningUser -up-|> User

' System boundary
rectangle "ChrysaLink - View Observation Subsystem" {
  
  ' Generalized use case
  usecase "View Observation\nDetails" as ViewObs
  
  ' Specialized use cases
  usecase "Add Comment\n(UC07)" as AddComment
  usecase "Suggest ID\n(UC08)" as SuggestID
  usecase "Receive Points\n(UC12)" as ReceivePoints
  
  ' Supporting use cases for Add Comment
  usecase "Display Comment\nInput Form" as DisplayCommentForm
  usecase "Save Comment" as SaveComment
  usecase "Send Notification\n(Comment)" as SendCommentNotif
  
  ' Supporting use cases for Suggest ID
  usecase "Display ID\nSuggestion Form" as DisplayIDForm
  usecase "Search Species\nDatabase" as SearchSpecies
  usecase "Record ID\nSuggestion" as RecordIDSugg
  usecase "Display ID\nSuggestion" as DisplayIDSugg
  usecase "Send Notification\n(ID Suggestion)" as SendIDNotif
  
  ' Supporting use cases for Receive Points
  usecase "Detect Confirmed\nIdentification" as DetectConfirmed
  usecase "Award Points" as AwardPoints
  usecase "Update User\nScore" as UpdateScore
}

' Primary actor associations
User --> ViewObs : views observation

' Generalization: specialized use cases extend ViewObs
AddComment -|> ViewObs
SuggestID -|> ViewObs
ReceivePoints -|> ViewObs

' Add Comment flow
ViewObs ..> AddComment : <<include>>
AddComment ..> DisplayCommentForm : <<include>>
AddComment ..> SaveComment : <<include>>
SaveComment ..> SendCommentNotif : <<extend>>\n[if not own observation]

' Suggest ID flow
ViewObs ..> SuggestID : <<include>>
SuggestID ..> DisplayIDForm : <<include>>
SuggestID ..> SearchSpecies : <<include>>
SuggestID ..> RecordIDSugg : <<include>>
RecordIDSugg ..> SendIDNotif : <<extend>>\n[if not own observation]
RecordIDSugg ..> DisplayIDSugg : <<include>>

' Receive Points flow
ReceivePoints ..> DetectConfirmed : <<include>>
DetectConfirmed ..> AwardPoints : <<include>>
AwardPoints ..> UpdateScore : <<include>>

' Secondary actor associations - Comments
DisplayCommentForm --> WebServer : render form
SaveComment --> DB : save comment
SendCommentNotif --> DB : create notification
SendCommentNotif --> WebServer : send alert

' Secondary actor associations - ID Suggestions
DisplayIDForm --> WebServer : render form
SearchSpecies --> DB : query species
RecordIDSugg --> DB : save suggestion
SendIDNotif --> DB : create notification
SendIDNotif --> WebServer : send alert
DisplayIDSugg --> WebServer : display on page

' Secondary actor associations - Points System
DetectConfirmed --> DB : query identifications
AwardPoints --> DB : add points
UpdateScore --> DB : update user score

' Extension Points
note right of SendCommentNotif
  Extension Point:
  - Only notify if comment from different user
end note

note right of SendIDNotif
  Extension Point:
  - Only notify if suggestion from different user
  - Notify when ID is verified by community
end note

note right of ReceivePoints
  Extension Point:
  - Award points based on verification threshold
  - Reputation score updates in real-time
end note

note bottom of ViewObs
  Base Use Case:
  Displays observation details with:
  - Images
  - Species info
  - Comments section
  - Suggested IDs
  - User score display
end note

@enduml
